# Check documentation at https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
# Use docker-based setup for running tests since the docker-setup already contains all bootstrapping scripts
# Inspired by api-platform's CI.yml
name: CI

on:
  push:
    branches:
      - master
  pull_request: ~
  workflow_dispatch: ~

concurrency:
  group: preview-pr-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Check for syntax errors
      - name: PHPLint
        uses: overtrue/phplint@7.4

      - name: Pull images
        run: docker-compose pull --ignore-pull-failures || true

      - name: Start services
        run: docker-compose up --build -d

      - name: Wait for services
        run: |
          while status="$(docker inspect --format="{{if .Config.Healthcheck}}{{print .State.Health.Status}}{{end}}" "$(docker-compose ps -q app)")"; do
            case $status in
              starting) sleep 1;;
              healthy) exit 0;;
              unhealthy)
                docker-compose ps
                docker-compose logs
                exit 1
              ;;
            esac
          done
          exit 1

      - name: Check HTTP reachability
        run: curl -v -o /dev/null http://localhost

      - name: PHPUnit
        run: docker-compose exec -T app bin/simple-phpunit --coverage-clover=coverage.clover --filter '\\Modules\\Commerce\\'

      - name: Doctrine Schema Validator
        run: docker-compose exec -T app bin/console doctrine:schema:validate --skip-sync

      - name: Run PHPStan
        run: docker-compose exec -T app php -d memory_limit=1G bin/phpstan --error-format=github
